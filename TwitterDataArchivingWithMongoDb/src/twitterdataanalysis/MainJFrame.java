/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package twitterdataanalysis;

import com.mongodb.BasicDBObject;
import com.mongodb.DBCursor;
import com.mongodb.DBObject;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import twitter4j.HashtagEntity;
import twitter4j.TwitterException;
import twitter4j.TwitterFactory;
import twitter4j.TwitterStream;
import twitter4j.TwitterStreamFactory;
import twitter4j.UserMentionEntity;
import twitter4j.conf.ConfigurationBuilder;

/**
 *
 * @author Tahmidolee
 */
public class MainJFrame extends javax.swing.JFrame {

    public ConfigurationBuilder mycf = null;
    public JTable localUpdateTable = new JTable();

    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        initComponents();
        MongoDBJDBC.par = this;
        MongoDBJDBC.connectToDB();
        updateLocalFieldsInfo();
    }

    public void updateLocalFieldsInfo() {

        MongoDBJDBC.setAllUserNamesTweetIds();
        DefaultComboBoxModel model = new DefaultComboBoxModel(MongoDBJDBC.allUserNames);
        userNameLocalComboText.setModel(model);
        addTweetUserNameCombobox.setModel(new DefaultComboBoxModel(MongoDBJDBC.allUserNames));

        AutoCompleteDecorator.decorate(addTweetUserNameCombobox);
        AutoCompleteDecorator.decorate(userNameLocalComboText);
        AutoCompleteDecorator.decorate(searchLocalText, MongoDBJDBC.allSearchTags, false);
        System.out.println("aaa" + MongoDBJDBC.allSearchTags.size());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        searchQueryTextField = new javax.swing.JTextField();
        maxSearchQueryTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchTweetInputViewTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        streamQueryTextField1 = new javax.swing.JTextField();
        maxStreamQueryTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        streanButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        streamTweetInputViewTable = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        userTimelineTextField = new javax.swing.JTextField();
        maxStatusForUserTimeLine = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        getTimeLineButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        userTimeLineTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        localQueryTable = new javax.swing.JTable();
        startTimeDatePicker = new org.jdesktop.swingx.JXDatePicker();
        endTimeDatePicker = new org.jdesktop.swingx.JXDatePicker();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        minimumRetweetLocalText = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        minimumFavoriteLocalText = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        userNameLocalComboText = new javax.swing.JComboBox<>();
        searchLocalText = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        addUserNameText = new javax.swing.JTextField();
        addUserScreenNameText = new javax.swing.JTextField();
        addUserIdText = new javax.swing.JTextField();
        addUserLangText = new javax.swing.JTextField();
        addUserLocText = new javax.swing.JTextField();
        createNewUserButton = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        addTweetTextBox = new javax.swing.JTextArea();
        addNewTweetButton = new javax.swing.JButton();
        addTweetUserNameCombobox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Your search query :");

        searchQueryTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchQueryTextFieldActionPerformed(evt);
            }
        });

        maxSearchQueryTextField.setText("100");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Maximum number of query per page: ");

        searchButton.setText("Start Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        searchTweetInputViewTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Data"
            }
        ));
        jScrollPane1.setViewportView(searchTweetInputViewTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchQueryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maxSearchQueryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(356, 356, 356))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchQueryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maxSearchQueryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Search Tweet", jPanel1);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Your Stream querys (comma separated) :");

        streamQueryTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                streamQueryTextField1ActionPerformed(evt);
            }
        });

        maxStreamQueryTextField.setText("100");
        maxStreamQueryTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxStreamQueryTextFieldActionPerformed(evt);
            }
        });

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Maximum number of query per page: ");

        streanButton.setText("Start Stream");
        streanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                streanButtonActionPerformed(evt);
            }
        });

        streamTweetInputViewTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "data"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(streamTweetInputViewTable);
        if (streamTweetInputViewTable.getColumnModel().getColumnCount() > 0) {
            streamTweetInputViewTable.getColumnModel().getColumn(0).setResizable(false);
            streamTweetInputViewTable.getColumnModel().getColumn(0).setHeaderValue("data");
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(streanButton, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(streamQueryTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maxStreamQueryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(356, 356, 356))
            .addComponent(jScrollPane2)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(streamQueryTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maxStreamQueryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(streanButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 798, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 656, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Stream Tweet", jPanel2);

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("UserName: ");

        userTimelineTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userTimelineTextFieldActionPerformed(evt);
            }
        });

        maxStatusForUserTimeLine.setText("20");
        maxStatusForUserTimeLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxStatusForUserTimeLineActionPerformed(evt);
            }
        });

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Maximum Number of Status: ");

        getTimeLineButton.setText("Get TimeLine");
        getTimeLineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getTimeLineButtonActionPerformed(evt);
            }
        });

        userTimeLineTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Data"
            }
        ));
        jScrollPane4.setViewportView(userTimeLineTable);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(getTimeLineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userTimelineTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(maxStatusForUserTimeLine, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(356, 356, 356))
            .addComponent(jScrollPane4)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userTimelineTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maxStatusForUserTimeLine, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(getTimeLineButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 798, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 656, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Get User Timeline", jPanel5);

        localQueryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }

        ));
        jScrollPane3.setViewportView(localQueryTable);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Start Time: ");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("End Time: ");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("User Name : ");

        jLabel8.setText("Minimum Retweet :");

        minimumRetweetLocalText.setText("0");
        minimumRetweetLocalText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minimumRetweetLocalTextActionPerformed(evt);
            }
        });

        jLabel9.setText("Minimum Favorite : ");

        minimumFavoriteLocalText.setText("0");

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Search Tag :");

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        userNameLocalComboText.setEditable(true);
        userNameLocalComboText.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton2.setText("Refresh Local DB");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("Update");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(minimumRetweetLocalText)
                    .addComponent(minimumFavoriteLocalText)
                    .addComponent(userNameLocalComboText, 0, 110, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 290, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(startTimeDatePicker, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                    .addComponent(endTimeDatePicker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchLocalText))
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(startTimeDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(userNameLocalComboText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(endTimeDatePicker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(searchLocalText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(minimumRetweetLocalText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(minimumFavoriteLocalText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton4))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Query on local DB", jPanel4);

        jLabel13.setText("User Name");

        jLabel14.setText("user_screen_name");

        jLabel15.setText("user_id");

        jLabel16.setText("user_lang");

        jLabel17.setText("user_location");

        createNewUserButton.setText("Create New User");
        createNewUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createNewUserButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addUserNameText)
                            .addComponent(addUserScreenNameText)
                            .addComponent(addUserIdText)
                            .addComponent(addUserLangText)
                            .addComponent(addUserLocText, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)))
                    .addComponent(createNewUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(143, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addUserNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addUserScreenNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addUserIdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addUserLangText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addUserLocText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(createNewUserButton)
                .addContainerGap(265, Short.MAX_VALUE))
        );

        jLabel18.setText("User Name");

        jLabel19.setText("tweet_text");

        addTweetTextBox.setColumns(20);
        addTweetTextBox.setRows(5);
        jScrollPane5.setViewportView(addTweetTextBox);

        addNewTweetButton.setText("Add New Tweet");
        addNewTweetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewTweetButtonActionPerformed(evt);
            }
        });

        addTweetUserNameCombobox.setEditable(true);
        addTweetUserNameCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap(112, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addTweetUserNameCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(addNewTweetButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addTweetUserNameCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(addNewTweetButton)
                .addContainerGap(253, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(130, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Update Local DB", jPanel7);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchQueryTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchQueryTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchQueryTextFieldActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        int maxNumberofTweet = 100;
        String searchKey = null;
        if (searchQueryTextField.getText().trim() == "") {
            JOptionPane.showMessageDialog(this, "Please input your scarch query.!!!");
            return;
        }
        searchKey = searchQueryTextField.getText().trim();
        if (maxSearchQueryTextField.getText().trim() == "") {
            JOptionPane.showMessageDialog(this, "Please input maximum number of tweets to search.!!!");
            return;
        } else {
            maxNumberofTweet = Integer.parseInt(maxSearchQueryTextField.getText().trim());
        }

        //creating twitter factor for collecting search query;
        TwitterFactory tf = new TwitterFactory(getNewBuilder().build());
        twitter4j.Twitter twitter = tf.getInstance();
        TweetSearch search = new TweetSearch();
        try {
            search.searchQuery(searchKey, twitter, maxNumberofTweet, searchTweetInputViewTable, this);
            updateLocalFieldsInfo();
        } catch (TwitterException ex) {
            JOptionPane.showMessageDialog(this, "Search Tweet Ex: "+ex);
            //Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_searchButtonActionPerformed

    private void streamQueryTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_streamQueryTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_streamQueryTextField1ActionPerformed

    private void streanButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_streanButtonActionPerformed
        // TODO add your handling code here:
        String streamQuery = "";
        if (streamQueryTextField1.getText().trim() == "") {
            JOptionPane.showMessageDialog(this, "Please provide the stream querys and limite.");
        }
        streamQuery = streamQueryTextField1.getText();
        int maxQuery = 100;
        try {
            maxQuery = Math.max(maxQuery, Integer.parseInt(maxStreamQueryTextField.getText()));
        } catch (Exception e) {

        }
        TweetStream streamTest = new TweetStream();
        TwitterStream twitterStream = new TwitterStreamFactory(getNewBuilder().build()).getInstance();
        TweetStream.currentNumberOfStream = 0;
        TweetStream.maxNumberOfStream = maxQuery;
        streamTest.streamQuery(twitterStream, streamQuery, maxQuery, streamTweetInputViewTable, this);

    }//GEN-LAST:event_streanButtonActionPerformed

    private void maxStreamQueryTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxStreamQueryTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maxStreamQueryTextFieldActionPerformed

    private void minimumRetweetLocalTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minimumRetweetLocalTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_minimumRetweetLocalTextActionPerformed

    private void userTimelineTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userTimelineTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userTimelineTextFieldActionPerformed

    private void maxStatusForUserTimeLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxStatusForUserTimeLineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maxStatusForUserTimeLineActionPerformed

    private void getTimeLineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getTimeLineButtonActionPerformed
        // TODO add your handling code here:
        int maxNumberofTweet = 20;
        String userName = null;
        if (userTimelineTextField.getText().trim() == "") {
            JOptionPane.showMessageDialog(this, "Please input your scarch query.!!!");
            return;
        }
        userName = userTimelineTextField.getText().trim();
        if (maxStatusForUserTimeLine.getText().trim() == "") {
            JOptionPane.showMessageDialog(this, "Please input maximum number of tweets to search.!!!");
            return;
        } else {
            maxNumberofTweet = Math.min(Integer.parseInt(maxStatusForUserTimeLine.getText().trim()), 20);
        }

        //creating twitter factor for collecting search query;
        TwitterFactory tf = new TwitterFactory(getNewBuilder().build());
        twitter4j.Twitter twitter = tf.getInstance();
        GetUserTimeline userTimeLine = new GetUserTimeline();
        userTimeLine.getUserTimeLine(userName, twitter, maxNumberofTweet, userTimeLineTable, this);


    }//GEN-LAST:event_getTimeLineButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Thread thread = new Thread(new Runnable() {
            @Override
            public void run() {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                localSearchButtonAction();

            }
        });
        thread.start();
    }//GEN-LAST:event_jButton1ActionPerformed

    synchronized public void localSearchButtonAction() {

        ((DefaultTableModel) (localUpdateTable.getModel())).setRowCount(0);
        ((DefaultTableModel) (localQueryTable.getModel())).setRowCount(0);
       // localQueryTable = new JTable();
       // localQueryTable = new JTable();
        UpdateLocalQueryTable.isTableViewReady = false;
        UpdateLocalQueryTable.isUpdateTableViewReady = false;
        Long startTime = 0l;
        Long endTime = System.currentTimeMillis();
        try {
            startTime = startTimeDatePicker.getDate().getTime();
        } catch (Exception e) {

        }
        try {
            endTime = endTimeDatePicker.getDate().getTime();
        } catch (Exception e) {

        }
        if (startTime == endTime) {
            endTime += 24 * 60 * 1000;
        }
        String search_tag = "";
        String userName = "";

        try {
            // if(searchLocalTextCombobox.getSelectedIndex()!=-1)
            search_tag = (String) searchLocalText.getText();
        } catch (Exception e) {
            System.out.println("***" + search_tag);
        }

        if (userNameLocalComboText.getSelectedIndex() != -1) {
            userName = (String) userNameLocalComboText.getSelectedItem();
        }

        int retweet = 0;
        int favorite = 0;
        try {
            retweet = Integer.parseInt(minimumRetweetLocalText.getText());
        } catch (Exception e) {

        }

        try {
            favorite = Integer.parseInt(minimumFavoriteLocalText.getText());
        } catch (Exception e) {

        }

        BasicDBObject favorite_count = new BasicDBObject();
        favorite_count.put("$gte", favorite);

        BasicDBObject retweet_count = new BasicDBObject();
        retweet_count.put("$gte", retweet);

        BasicDBObject created_at = new BasicDBObject();
        created_at.put("$gte", startTime);
        created_at.put("$lte", endTime);

        BasicDBObject localQuery = new BasicDBObject();
        localQuery.put("retweet_count", retweet_count);
        localQuery.put("favorite_count", favorite_count);
        if (userName.trim().equals("") == false) {
            localQuery.put("user_name", userName);
        }
        localQuery.put("created_at", created_at);

        if (search_tag.trim().equals("") == false) {
            localQuery.put("search_tag", search_tag);
        }
        System.out.println("Local Query : " + localQuery.toJson());
        DBCursor cursor = MongoDBJDBC.collectionForSearchTweet.find(localQuery);
        UpdateLocalQueryTable.isTableViewReady = false;

        while (cursor.hasNext()) {
            DBObject next = cursor.next();
            BasicDBObject forView = new BasicDBObject();
            System.out.println("SHow : " + next.toString());
            forView.put("user_id", next.get("user_id"));
            forView.put("user_name", next.get("user_name"));
            forView.put("user_location", next.get("user_location"));
            forView.put("tweet_ID", next.get("tweet_ID"));
            forView.put("tweet_text", next.get("tweet_text"));
            forView.put("retweet_count", next.get("retweet_count"));
            forView.put("favorite_count", next.get("favorite_count"));
            forView.put("search_tag", next.get("search_tag"));
            forView.put("created_at", getDate((Long) next.get("created_at")));
            forView.put("tweet_mentioned_users", next.get("tweet_mentioned_users"));
            forView.put("tweet_hashtags", next.get("tweet_hashtags"));
            System.out.println("for View : " + forView);
            UpdateLocalQueryTable.updateInputViewTable(localQueryTable, forView);
            UpdateLocalQueryTable.updateUpdateInputViewTable(localUpdateTable, forView);

        }
    }


    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        // TODO add your handling code here:


    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        updateLocalFieldsInfo();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) localUpdateTable.getModel();
        DefaultTableModel localmodel = (DefaultTableModel) localQueryTable.getModel();

        for (int j = 0; j < model.getRowCount(); j++) {
            BasicDBObject query = new BasicDBObject();
            BasicDBObject update = new BasicDBObject();
            for (int i = 0; i < model.getColumnCount(); i++) {
                if (i == 8) {
                    continue;
                }
                if (model.getColumnName(i).equals("tweet_ID")) {
                    query.put("tweet_ID", (Long) model.getValueAt(j, i));
                    update.put(localmodel.getColumnName(i), (Long) model.getValueAt(j, i));
                } else {
                    update.put(localmodel.getColumnName(i), localmodel.getValueAt(j, i));
                }

            }
            //update.put("tweet_text", "hello");
            BasicDBObject finalUpdate = new BasicDBObject();
            finalUpdate.put("$set", update);

            System.out.println("query : " + query.toString());
            System.out.println("update : " + update.toString());
            System.out.println("Final : " + finalUpdate.toString());
            MongoDBJDBC.updateCollection(query, finalUpdate, MongoDBJDBC.collectionForSearchTweet);
            //MongoDBJDBC.connectToDB();
        }
        // 
    }//GEN-LAST:event_jButton4ActionPerformed

    private void createNewUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createNewUserButtonActionPerformed
        // TODO add your handling code here:
        BasicDBObject basicObj = new BasicDBObject();
        basicObj.put("user_name", addUserNameText.getText());
        basicObj.put("user_screen_name", addUserScreenNameText.getText());

        basicObj.put("user_id", Long.parseLong(addUserIdText.getText()));
        basicObj.put("user_created_at", System.currentTimeMillis());
        basicObj.put("user_description", "Local User");
        basicObj.put("user_lang", addUserLangText.getText());
        basicObj.put("user_url", "Local User");

        basicObj.put("user_location", addUserLocText.getText());
        basicObj.put("user_friends", 0);
        basicObj.put("user_followers", 0);
        basicObj.put("user_time_zone", "Bng");
        basicObj.put("user_utc_offset", -1);
        basicObj.put("user_is_varified", false);
        BasicDBObject userBasicObj = new BasicDBObject(basicObj);
        MongoDBJDBC.insertBasicDBObjectToCollection(userBasicObj, MongoDBJDBC.collectionForUuser);
        MongoDBJDBC.insertBasicDBObjectToCollection(basicObj, MongoDBJDBC.collectionForSearchTweet);
    }//GEN-LAST:event_createNewUserButtonActionPerformed

    private void addNewTweetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewTweetButtonActionPerformed
        // TODO add your handling code here:
        String userName = "";
        if (addTweetUserNameCombobox.getSelectedIndex() != -1) {
            userName = (String) addTweetUserNameCombobox.getSelectedItem();
        } else {
            JOptionPane.showMessageDialog(this, "Please Select Valid User. Or create ThisUserFirst Or Update Local DB");
        }
        BasicDBObject userQuery = new BasicDBObject();
        userQuery.put("user_name", userName);

        BasicDBObject basicObj = new BasicDBObject(MongoDBJDBC.getSingleItemFromCollection(userQuery, MongoDBJDBC.collectionForUuser));
        basicObj.removeField("_id");
        basicObj.put("tweet_ID", System.currentTimeMillis());
        basicObj.put("retweet_count", 0);
        basicObj.put("favorite_count", 0);
        basicObj.put("source", "Java Local App");
        UserMentionEntity[] mentioned = new UserMentionEntity[0];

        ArrayList<String> mentionedUsers = new ArrayList<>();
        for (UserMentionEntity user : mentioned) {
            mentionedUsers.add(user.getScreenName());
        }

        basicObj.put("tweet_mentioned_users", mentionedUsers);
        basicObj.put("tweet_mentioned_count", mentioned.length);

        HashtagEntity[] hashTags = new HashtagEntity[0];
        ArrayList<String> userHashTags = new ArrayList<>();
        for (HashtagEntity hash : hashTags) {
            userHashTags.add("#" + hash.getText());
        }
        basicObj.put("tweet_hashtags", userHashTags);
        basicObj.put("tweet_hashtab_count", hashTags.length);

        basicObj.put("tweet_text", addTweetTextBox.getText());
        basicObj.put("created_at", System.currentTimeMillis());
        basicObj.put("is_retweet", false);
        basicObj.put("is_retweeted", false);
        basicObj.put("search_tag", "Local Tweet");
        MongoDBJDBC.insertBasicDBObjectToCollection(basicObj, MongoDBJDBC.collectionForSearchTweet);

    }//GEN-LAST:event_addNewTweetButtonActionPerformed
    public Date getDate(Long millis) {
        return new Date(millis);
    }

    public ConfigurationBuilder getNewBuilder() {
        ConfigurationBuilder cf = new ConfigurationBuilder();
        cf.setDebugEnabled(true)
                .setOAuthConsumerKey("***")
                .setOAuthConsumerSecret("***")
                .setOAuthAccessToken("**-**")
                .setOAuthAccessTokenSecret("****");
        cf.setJSONStoreEnabled(true);
        return cf;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewTweetButton;
    private javax.swing.JTextArea addTweetTextBox;
    private javax.swing.JComboBox<String> addTweetUserNameCombobox;
    private javax.swing.JTextField addUserIdText;
    private javax.swing.JTextField addUserLangText;
    private javax.swing.JTextField addUserLocText;
    private javax.swing.JTextField addUserNameText;
    private javax.swing.JTextField addUserScreenNameText;
    private javax.swing.JButton createNewUserButton;
    private org.jdesktop.swingx.JXDatePicker endTimeDatePicker;
    private javax.swing.JButton getTimeLineButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable localQueryTable;
    private javax.swing.JTextField maxSearchQueryTextField;
    private javax.swing.JTextField maxStatusForUserTimeLine;
    private javax.swing.JTextField maxStreamQueryTextField;
    private javax.swing.JTextField minimumFavoriteLocalText;
    private javax.swing.JTextField minimumRetweetLocalText;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchLocalText;
    private javax.swing.JTextField searchQueryTextField;
    private javax.swing.JTable searchTweetInputViewTable;
    private org.jdesktop.swingx.JXDatePicker startTimeDatePicker;
    private javax.swing.JTextField streamQueryTextField1;
    private javax.swing.JTable streamTweetInputViewTable;
    private javax.swing.JButton streanButton;
    private javax.swing.JComboBox<String> userNameLocalComboText;
    private javax.swing.JTable userTimeLineTable;
    private javax.swing.JTextField userTimelineTextField;
    // End of variables declaration//GEN-END:variables
}
